services:
  # Backing Services
  food-app-service-db:
    image: "mongo:latest"
    container_name: "food-app-service-db"
    ports:
      - "3001:27017"
    environment:
      MONGO_INITDB_DATABASE: food-app
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      # seeding scripts
      - ./db/mongodb/init.sql:/docker-entrypoint-initdb.d
      # named volumes
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    networks:
      - internal
  kafka:
    image: "bitnami/kafka:latest"
    container_name: "kafka"
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
    networks:
      - internal

  # Applications
  config-service:
    image: "config-service:latest"
    container_name: "config-service"
    ports:
      - "8888:8888"
    networks:
      - internal

  api-gateway:
    depends_on:
      - auth-service
      - config-service
    image: "api-gateway:latest"
    container_name: "api-gateway"
    ports:
      - "4004:4004"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:4005
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - internal

  auth-service:
    depends_on:
      - food-app-service-db
      - config-service
    image: "auth-service:latest"
    container_name: "auth-service"
    ports:
      - "4005:4005"
      - "9002:9002"
    environment:
      - JWT_SECRET=480a088f3f15819b594e55ce9cec34069603a710d0a23094ebc226173845157231432e72cae66389cbced998e8e5705622bb28ecf070b3a582b20a1619ffa86543a861f3dc247b71598be79f768a31d1fb853a34b63f0328cea0dd5657f6da387c331a7e7433045de785850c63ac0167b491b8c3e0a4134d18c95a6de46fb83da1efaf70c90d3ebbc93a7cad6d9df012299e3a7d10760205688718d091723977904941170711d485ecb119b9e54e9e89a9df2600c58627df7b5a08ae16707292030e0c6abb75f930457c6d65ceb3e974f9845c2af4f9b82353e43c815978383acba08fbf3f1760aa9d6773ed09a4ee6d465286f74e5f163bb4a9cb588bdf4292
      #- SPRING_DATA_MONGODB_URI=mongodb://admin:admin@food-app-service-db:27017/food-app
      - SPRING_DATA_MONGODB_HOST=food-app-service-db
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=food-app
      - SPRING_DATA_MONGODB_USERNAME=admin
      - SPRING_DATA_MONGODB_PASSWORD=admin
    networks:
      - internal

  billing-service:
    image: "billing-service:latest"
    container_name: "billing-service"
    ports:
      - "4001:4001"
      - "9001:9001"
    networks:
      - internal

  analytics-service:
    depends_on:
      - config-service
      - kafka
    image: "analytics-service:latest"
    container_name: "analytics-service"
    ports:
      - "4002:4002"
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - internal

  restaurant-service:
    depends_on:
      - config-service
      - food-app-service-db
      - kafka
      - billing-service
    image: "restaurant-service:latest"
    container_name: "restaurant-service"
    ports:
      - "4000:4000"
    environment:
      - BILLING_SERVICE_ADDRESS=billing-service
      - BILLING_SERVICE_GRPC_PORT=9001
      - AUTH_SERVICE_ADDRESS=auth-service
      - AUTH_SERVICE_GRPC_PORT=9002
      - SPRING_DATA_MONGODB_HOST=food-app-service-db
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=food-app
      - SPRING_DATA_MONGODB_USERNAME=admin
      - SPRING_DATA_MONGODB_PASSWORD=admin
#      - SPRING_DATA_MONGODB_URI=mongodb://admin:admin@food-app-service-db:27017/food-app
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

    networks:
      - internal
    extra_hosts:
      - "host.docker.internal:host-gateway"
volumes:
  mongodb:
  mongoconfig:
  mongo-ts-db:
  mongo-ts-config:
networks:
  internal:
    driver: bridge

