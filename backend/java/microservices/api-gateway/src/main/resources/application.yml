server:
  port: 4004
auth0:
  front-end: http://localhost:5173
  auth-server: http://host.docker.internal:4005/oauth2/authorization/auth0
  audience: mern-food-ordering-app-api
  domain: https://oumabaros.us.auth0.com
  client-id: qdHdKxJmRtLyuquwypNeyXVkWhw1rvGB
  client-secret: wljPCTHS-_YxwHrN9nh46GSnG49_4tbtKR3a0ZEbM1nVcDsME82pyzQBSKf9218a
  jwk-set-uri: https://oumabaros.us.auth0.com/.well-known/jwks.json
spring:
  application:
    name: api-gateway
  profiles:
    active: dev
  config:
    import: "optional:configserver:"
  main:
    allow-bean-definition-overriding: true
    web-application-type: reactive
  security:
    oauth2:
      resourceserver:
        jwt:
          audiences:
            - ${auth0.audience}
          issuer-uri: ${auth0.domain}/
          jwk-set-uri: ${auth0.jwk-set-uri}
      client:
        registration:
          auth0:
            client-id: ${auth0.client-id}
            client-secret: ${auth0.client-secret}
            scope: openid+profile+email
            redirect-uri: ${auth0.front-end}
        provider:
          auth0:
            issuer-uri: ${auth0.domain}/
  cloud:
    config:
      uri: http://config-service:8888
      request-connect-timeout: 5000
      request-read-timeout: 5000
      fail-fast: true
      retry:
        max-attempts: 6
        initial-interval: 1000
        max-interval: 2000
        multiplier: 1.1
      username: user
      password: password
      label: master
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - ${auth0.front-end}
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - "*"
            allowCredentials: true
      routes:
        - id: auth-service-route
          uri: http://host.docker.internal:4005
          predicates:
            - Path=/api/my/user/**
          filters:
            - AddResponseHeader=X-CORS-Enabled, true
            - RewritePath=/api/(?<segment>.*), /${segment}

        # Route for /api/restaurants/** to restaurant-service
        - id: restaurant-my-service-route
          uri: http://host.docker.internal:4000
          predicates:
            - Path=/api/my/restaurant/**
          filters:
            - AddResponseHeader=X-CORS-Enabled, true
            - RewritePath=/api/(?<segment>.*), /${segment}
        # Route for /api/restaurants/** to restaurant-service
        - id: restaurant-service-route
          uri: http://host.docker.internal:4000
          predicates:
            - Path=/api/restaurant/**
          filters:
            - AddResponseHeader=X-CORS-Enabled, true
            - RewritePath=/api/(?<segment>.*), /${segment}

        # Route for /api/docs/restaurants to restaurant-service /v3/api-docs
        - id: api-docs-restaurant-route
          uri: http://host.docker.internal:4000
          predicates:
            - Path=/api-docs/restaurant
          filters:
            - RewritePath=/api-docs/restaurant,/v3/api-docs

        - id: api-docs-auth-route
          uri: http:/host.docker.internal:4005
          predicates:
            - Path=/api-docs/auth
          filters:
            - RewritePath=/api-docs/auth,/v3/api-docs
      default-filters:
        - TokenRelay=

